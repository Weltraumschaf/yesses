server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
}

# Change the default configuration to enable ssl
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/ssl/tls_cert.pem;
    ssl_certificate_key /etc/ssl/tls_key.pem;

    ssl_dhparam /etc/ssl/dhparams2048.pem;

    # own addition
    ssl_ecdh_curve X25519:prime256v1:secp384r1;

    server_name nginx.dev.intranet;
    server_tokens off;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/ecdsa_ca_cert.pem;
}
